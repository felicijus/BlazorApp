@page "/weatherforecast"
@using BlazorApp.Shared
@inject HttpClient Http

@using System.Net.Http.Json

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />



<style>
    .selected {
        background-color: #E20074 !important;
    }

        .selected > td {
            color: white !important;
        }

            .selected > td .mud-input {
                color: white !important;
            }
</style>



<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{   
    <p ><em>Loading...</em></p>
}
else
{
<MudTable @ref="forecastsTable" Items="@forecasts.Take(50)" Hover="true" Loading="_loading" LoadingProgressColor="Color.Info" RowClassFunc="@SelectedRowClassFunc" OnRowClick="RowClickEvent" T="WeatherForecast">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Date</MudTh>
        <MudTh>TemperatureC</MudTh>
        <MudTh>TemperatureF</MudTh>
        <MudTh>Summary</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>
        <MudTd DataLabel="TemperatureC">@context.TemperatureC</MudTd>
        <MudTd DataLabel="TemperatureF">@context.TemperatureF</MudTd>
        <MudTd DataLabel="Summary">@context.Summary</MudTd>
    </RowTemplate>
</MudTable>
}

<MudSwitch @bind-Checked="_loading">Show Loading</MudSwitch>

@code {

    private IEnumerable<WeatherForecast> forecasts = new List<WeatherForecast>();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        forecasts = await Http.GetFromJsonAsync<List<WeatherForecast>>("api/WeatherForecast");
        _loading = false;
    }

    private bool _loading;

    private MudTable<WeatherForecast> forecastsTable;
    private int selectedRowNumber = -1;

    // function

    private void RowClickEvent(TableRowClickEventArgs<WeatherForecast> tableRowClickEventArgs)
    {
        Console.Write("Row has been clicked");
    }


    private string SelectedRowClassFunc(WeatherForecast weatherForecast, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;

            return string.Empty;
        }
        else if (forecastsTable.SelectedItem != null && forecastsTable.SelectedItem.Equals(weatherForecast))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else return string.Empty;
    }
    
    
    

}
